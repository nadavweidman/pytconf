Search.setIndex({"docnames": ["index", "modules", "pytconf"], "filenames": ["index.rst", "modules.rst", "pytconf.rst"], "titles": ["Welcome to pytconf\u2019s documentation!", "pytconf", "pytconf package"], "terms": {"version": [0, 2], "0": 0, "87": 0, "packag": [0, 1], "index": 0, "modul": [0, 1], "search": 0, "page": 0, "submodul": 1, "color_util": 1, "color_hi": [1, 2], "color_ok": [1, 2], "color_warn": [1, 2], "print_error": [1, 2], "print_highlight": [1, 2], "print_titl": [1, 2], "print_warn": [1, 2], "config": 1, "configformat": [1, 2], "json": [1, 2], "yaml": [1, 2], "configtyp": [1, 2], "system": [1, 2], "user": [1, 2], "metaconfig": [1, 2], "pytconfconf": [1, 2], "config_arg_parse_and_launch": [1, 2], "get_config": [1, 2], "get_function_select": [1, 2], "get_html": [1, 2], "get_html_for_config": [1, 2], "get_html_for_funct": [1, 2], "has_funct": [1, 2], "launch": [1, 2], "parse_arg": [1, 2], "process_flag": [1, 2], "read_flags_from_config": [1, 2], "register_default": [1, 2], "register_funct": [1, 2], "register_function_group": [1, 2], "register_main": [1, 2], "show_help": [1, 2], "show_help_for_config": [1, 2], "show_help_for_funct": [1, 2], "write_config": [1, 2], "write_config_fil": [1, 2], "get_free_arg": [1, 2], "get_pytconf": [1, 2], "is_help": [1, 2], "register_endpoint": [1, 2], "rm_config_fil": [1, 2], "convert": 1, "convert_bool_to_str": [1, 2], "convert_int_or_none_to_str": [1, 2], "convert_int_to_str": [1, 2], "convert_list_int_to_str": [1, 2], "convert_list_str_to_str": [1, 2], "convert_str_or_none_to_str": [1, 2], "convert_str_to_bool": [1, 2], "convert_str_to_int": [1, 2], "convert_str_to_int_default": [1, 2], "convert_str_to_int_or_non": [1, 2], "convert_str_to_list_int": [1, 2], "convert_str_to_list_str": [1, 2], "convert_str_to_str": [1, 2], "convert_str_to_str_or_non": [1, 2], "data": 1, "enum_subset": 1, "enumsubset": [1, 2], "add": [1, 2], "delet": [1, 2], "from_enum_al": [1, 2], "from_str": [1, 2], "has_valu": [1, 2], "list_of_str": [1, 2], "to_str": [1, 2], "valu": [1, 2], "yield_valu": [1, 2], "enum_subset_to_str": [1, 2], "g_from_enum_al": [1, 2], "g_from_str": [1, 2], "errors_collector": 1, "errorscollector": [1, 2], "add_error": [1, 2], "get_do_help": [1, 2], "get_show_error": [1, 2], "have_error": [1, 2], "set_do_help": [1, 2], "set_force_show_error": [1, 2], "unset_show_error": [1, 2], "yield_error": [1, 2], "extended_enum": 1, "extendedenum": [1, 2], "get_list_of_all_valu": [1, 2], "enum_int_to_nam": [1, 2], "enum_type_to_list_str": [1, 2], "enum_value_to_str": [1, 2], "str_to_enum_int": [1, 2], "str_to_enum_valu": [1, 2], "param": 1, "collect": [1, 2], "get_type_nam": [1, 2], "more_help": [1, 2], "s2t": [1, 2], "s2t_generate_from_default": [1, 2], "t2": [1, 2], "paramchoic": [1, 2], "paramcr": [1, 2], "create_bool": [1, 2], "create_choic": [1, 2], "create_enum": [1, 2], "create_enum_subset": [1, 2], "create_existing_bucket": [1, 2], "create_existing_fil": [1, 2], "create_existing_fold": [1, 2], "create_int": [1, 2], "create_int_or_non": [1, 2], "create_list_int": [1, 2], "create_list_str": [1, 2], "create_new_fil": [1, 2], "create_str": [1, 2], "create_str_or_non": [1, 2], "paramenum": [1, 2], "paramenumsubset": [1, 2], "paramfilenam": [1, 2], "paramfunct": [1, 2], "uniqu": [1, 2], "param_collector": 1, "paramcollector": [1, 2], "add_data": [1, 2], "clear": [1, 2], "get_item": [1, 2], "yield_item": [1, 2], "pydoc": 1, "get_first_lin": [1, 2], "registri": 1, "get_config_for_nam": [1, 2], "get_data_for_nam": [1, 2], "has_nam": [1, 2], "regist": [1, 2], "yield_config": [1, 2], "yield_name_data_for_config": [1, 2], "yield_names_for_config": [1, 2], "static": 1, "util": 1, "htmlgen": [1, 2], "get_logg": [1, 2], "noun": [1, 2], "content": 1, "text": 2, "sourc": 2, "class": 2, "base": 2, "object": 2, "all": 2, "name": 2, "none": 2, "qualnam": 2, "type": 2, "start": 2, "1": 2, "boundari": 2, "enum": 2, "2": 2, "namespac": 2, "meta": 2, "arg": 2, "list": 2, "str": 2, "true": 2, "do_exit": 2, "app_nam": 2, "config_typ": 2, "config_format": 2, "error": 2, "classmethod": 2, "html_gen": 2, "function_nam": 2, "bool": 2, "function_select": 2, "flag": 2, "dict": 2, "pars": 2, "fill": 2, "global": 2, "function": 2, "callabl": 2, "descript": 2, "suggest_config": 2, "group": 2, "default": 2, "allow_free_arg": 2, "fals": 2, "min_free_arg": 2, "int": 2, "max_free_arg": 2, "show_meta": 2, "show": 2, "main_funct": 2, "main_descript": 2, "show_help_ful": 2, "show_help_suggest": 2, "filenam": 2, "thi": 2, "i": 2, "real": 2, "api": 2, "string": 2, "ani": 2, "b": 2, "v": 2, "li": 2, "": 2, "e": 2, "enum_typ": 2, "list_of_valu": 2, "enum_valu": 2, "item": 2, "collector": 2, "support": 2, "two": 2, "regular": 2, "special": 2, "ar": 2, "ones": 2, "print": 2, "carri": 2, "error_typ": 2, "msg": 2, "gener": 2, "ev": 2, "help_str": 2, "No": 2, "help": 2, "configur": 2, "option": 2, "type_nam": 2, "abc": 2, "parent": 2, "paramet": 2, "abstract": 2, "t": 2, "choice_list": 2, "creation": 2, "creat": 2, "return": 2, "choic": 2, "an": 2, "bucket": 2, "gcp": 2, "suffix": 2, "new": 2, "file": 2, "folder": 2, "function_s2t": 2, "function_s2t_generate_from_default": 2, "function_t2": 2, "o": 2, "default_v": 2, "get": 2, "first": 2, "line": 2, "which": 2, "document": 2, "whitespac": 2, "can": 2, "consum": 2, "from": 2, "within": 2, "num": 2, "right": 2, "specif": 2, "quantiti": 2}, "objects": {"": [[2, 0, 0, "-", "pytconf"]], "pytconf": [[2, 0, 0, "-", "color_utils"], [2, 0, 0, "-", "config"], [2, 0, 0, "-", "convert"], [2, 0, 0, "-", "data"], [2, 0, 0, "-", "enum_subset"], [2, 0, 0, "-", "errors_collector"], [2, 0, 0, "-", "extended_enum"], [2, 0, 0, "-", "param"], [2, 0, 0, "-", "param_collector"], [2, 0, 0, "-", "pydoc"], [2, 0, 0, "-", "registry"], [2, 0, 0, "-", "static"], [2, 0, 0, "-", "utils"]], "pytconf.color_utils": [[2, 1, 1, "", "color_hi"], [2, 1, 1, "", "color_ok"], [2, 1, 1, "", "color_warn"], [2, 1, 1, "", "print_error"], [2, 1, 1, "", "print_highlight"], [2, 1, 1, "", "print_title"], [2, 1, 1, "", "print_warn"]], "pytconf.config": [[2, 2, 1, "", "Config"], [2, 2, 1, "", "ConfigFormat"], [2, 2, 1, "", "ConfigType"], [2, 2, 1, "", "MetaConfig"], [2, 2, 1, "", "PytconfConf"], [2, 1, 1, "", "config_arg_parse_and_launch"], [2, 1, 1, "", "get_free_args"], [2, 1, 1, "", "get_pytconf"], [2, 1, 1, "", "is_help"], [2, 1, 1, "", "register_endpoint"], [2, 1, 1, "", "register_function"], [2, 1, 1, "", "register_function_group"], [2, 1, 1, "", "register_main"], [2, 1, 1, "", "rm_config_file"], [2, 1, 1, "", "write_config_file"]], "pytconf.config.ConfigFormat": [[2, 3, 1, "", "JSON"], [2, 3, 1, "", "YAML"]], "pytconf.config.ConfigType": [[2, 3, 1, "", "SYSTEM"], [2, 3, 1, "", "USER"]], "pytconf.config.PytconfConf": [[2, 4, 1, "", "config_arg_parse_and_launch"], [2, 4, 1, "", "get_config"], [2, 4, 1, "", "get_function_selected"], [2, 4, 1, "", "get_html"], [2, 4, 1, "", "get_html_for_config"], [2, 4, 1, "", "get_html_for_function"], [2, 4, 1, "", "has_function"], [2, 4, 1, "", "launch"], [2, 4, 1, "", "parse_args"], [2, 4, 1, "", "print_errors"], [2, 4, 1, "", "process_flags"], [2, 4, 1, "", "read_flags_from_config"], [2, 4, 1, "", "register_defaults"], [2, 4, 1, "", "register_function"], [2, 4, 1, "", "register_function_group"], [2, 4, 1, "", "register_main"], [2, 4, 1, "", "show_help"], [2, 4, 1, "", "show_help_for_config"], [2, 4, 1, "", "show_help_for_function"], [2, 4, 1, "", "write_config"], [2, 4, 1, "", "write_config_file"]], "pytconf.convert": [[2, 1, 1, "", "convert_bool_to_str"], [2, 1, 1, "", "convert_int_or_none_to_str"], [2, 1, 1, "", "convert_int_to_str"], [2, 1, 1, "", "convert_list_int_to_str"], [2, 1, 1, "", "convert_list_str_to_str"], [2, 1, 1, "", "convert_str_or_none_to_str"], [2, 1, 1, "", "convert_str_to_bool"], [2, 1, 1, "", "convert_str_to_int"], [2, 1, 1, "", "convert_str_to_int_default"], [2, 1, 1, "", "convert_str_to_int_or_none"], [2, 1, 1, "", "convert_str_to_list_int"], [2, 1, 1, "", "convert_str_to_list_str"], [2, 1, 1, "", "convert_str_to_str"], [2, 1, 1, "", "convert_str_to_str_or_none"]], "pytconf.enum_subset": [[2, 2, 1, "", "EnumSubset"], [2, 1, 1, "", "enum_subset_to_str"], [2, 1, 1, "", "g_from_enum_all"], [2, 1, 1, "", "g_from_string"]], "pytconf.enum_subset.EnumSubset": [[2, 4, 1, "", "add"], [2, 4, 1, "", "delete"], [2, 4, 1, "", "from_enum_all"], [2, 4, 1, "", "from_string"], [2, 4, 1, "", "has_value"], [2, 4, 1, "", "list_of_strings"], [2, 4, 1, "", "to_string"], [2, 4, 1, "", "values"], [2, 4, 1, "", "yield_values"]], "pytconf.errors_collector": [[2, 2, 1, "", "ErrorsCollector"]], "pytconf.errors_collector.ErrorsCollector": [[2, 4, 1, "", "add_error"], [2, 4, 1, "", "get_do_help"], [2, 4, 1, "", "get_show_errors"], [2, 4, 1, "", "have_errors"], [2, 4, 1, "", "set_do_help"], [2, 4, 1, "", "set_force_show_errors"], [2, 4, 1, "", "unset_show_errors"], [2, 4, 1, "", "yield_errors"]], "pytconf.extended_enum": [[2, 2, 1, "", "ExtendedEnum"], [2, 1, 1, "", "enum_int_to_name"], [2, 1, 1, "", "enum_type_to_list_str"], [2, 1, 1, "", "enum_value_to_str"], [2, 1, 1, "", "str_to_enum_int"], [2, 1, 1, "", "str_to_enum_value"]], "pytconf.extended_enum.ExtendedEnum": [[2, 4, 1, "", "from_string"], [2, 4, 1, "", "get_list_of_all_values"]], "pytconf.param": [[2, 2, 1, "", "Param"], [2, 2, 1, "", "ParamChoice"], [2, 2, 1, "", "ParamCreator"], [2, 2, 1, "", "ParamEnum"], [2, 2, 1, "", "ParamEnumSubset"], [2, 2, 1, "", "ParamFilename"], [2, 2, 1, "", "ParamFunctions"], [2, 2, 1, "", "Unique"]], "pytconf.param.Param": [[2, 4, 1, "", "collect"], [2, 4, 1, "", "get_type_name"], [2, 4, 1, "", "more_help"], [2, 4, 1, "", "s2t"], [2, 4, 1, "", "s2t_generate_from_default"], [2, 4, 1, "", "t2s"]], "pytconf.param.ParamChoice": [[2, 4, 1, "", "more_help"], [2, 4, 1, "", "s2t"], [2, 4, 1, "", "t2s"]], "pytconf.param.ParamCreator": [[2, 4, 1, "", "create_bool"], [2, 4, 1, "", "create_choice"], [2, 4, 1, "", "create_enum"], [2, 4, 1, "", "create_enum_subset"], [2, 4, 1, "", "create_existing_bucket"], [2, 4, 1, "", "create_existing_file"], [2, 4, 1, "", "create_existing_folder"], [2, 4, 1, "", "create_int"], [2, 4, 1, "", "create_int_or_none"], [2, 4, 1, "", "create_list_int"], [2, 4, 1, "", "create_list_str"], [2, 4, 1, "", "create_new_file"], [2, 4, 1, "", "create_str"], [2, 4, 1, "", "create_str_or_none"]], "pytconf.param.ParamEnum": [[2, 4, 1, "", "get_type_name"], [2, 4, 1, "", "more_help"], [2, 4, 1, "", "s2t"], [2, 4, 1, "", "t2s"]], "pytconf.param.ParamEnumSubset": [[2, 4, 1, "", "get_type_name"], [2, 4, 1, "", "more_help"], [2, 4, 1, "", "s2t"], [2, 4, 1, "", "s2t_generate_from_default"], [2, 4, 1, "", "t2s"]], "pytconf.param.ParamFilename": [[2, 4, 1, "", "more_help"], [2, 4, 1, "", "s2t"], [2, 4, 1, "", "t2s"]], "pytconf.param.ParamFunctions": [[2, 4, 1, "", "s2t"], [2, 4, 1, "", "s2t_generate_from_default"], [2, 4, 1, "", "t2s"]], "pytconf.param_collector": [[2, 2, 1, "", "ParamCollector"]], "pytconf.param_collector.ParamCollector": [[2, 4, 1, "", "add_data"], [2, 4, 1, "", "clear"], [2, 4, 1, "", "get_item"], [2, 4, 1, "", "yield_items"]], "pytconf.pydoc": [[2, 1, 1, "", "get_first_line"]], "pytconf.registry": [[2, 2, 1, "", "Registry"]], "pytconf.registry.Registry": [[2, 4, 1, "", "get_config_for_name"], [2, 4, 1, "", "get_data_for_name"], [2, 4, 1, "", "has_name"], [2, 4, 1, "", "register"], [2, 4, 1, "", "yield_configs"], [2, 4, 1, "", "yield_name_data_for_config"], [2, 4, 1, "", "yield_names_for_config"]], "pytconf.utils": [[2, 2, 1, "", "HtmlGen"], [2, 1, 1, "", "get_logger"], [2, 1, 1, "", "noun"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"]}, "titleterms": {"welcom": 0, "pytconf": [0, 1, 2], "": 0, "document": 0, "content": [0, 2], "indic": 0, "tabl": 0, "packag": 2, "submodul": 2, "color_util": 2, "modul": 2, "config": 2, "convert": 2, "data": 2, "enum_subset": 2, "errors_collector": 2, "extended_enum": 2, "param": 2, "param_collector": 2, "pydoc": 2, "registri": 2, "static": 2, "util": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Welcome to pytconf\u2019s documentation!": [[0, "welcome-to-project-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "pytconf": [[1, "pytconf"]], "pytconf package": [[2, "pytconf-package"]], "Submodules": [[2, "submodules"]], "pytconf.color_utils module": [[2, "module-pytconf.color_utils"]], "pytconf.config module": [[2, "module-pytconf.config"]], "pytconf.convert module": [[2, "module-pytconf.convert"]], "pytconf.data module": [[2, "module-pytconf.data"]], "pytconf.enum_subset module": [[2, "module-pytconf.enum_subset"]], "pytconf.errors_collector module": [[2, "module-pytconf.errors_collector"]], "pytconf.extended_enum module": [[2, "module-pytconf.extended_enum"]], "pytconf.param module": [[2, "module-pytconf.param"]], "pytconf.param_collector module": [[2, "module-pytconf.param_collector"]], "pytconf.pydoc module": [[2, "module-pytconf.pydoc"]], "pytconf.registry module": [[2, "module-pytconf.registry"]], "pytconf.static module": [[2, "module-pytconf.static"]], "pytconf.utils module": [[2, "module-pytconf.utils"]], "Module contents": [[2, "module-pytconf"]]}, "indexentries": {"config (class in pytconf.config)": [[2, "pytconf.config.Config"]], "configformat (class in pytconf.config)": [[2, "pytconf.config.ConfigFormat"]], "configtype (class in pytconf.config)": [[2, "pytconf.config.ConfigType"]], "enumsubset (class in pytconf.enum_subset)": [[2, "pytconf.enum_subset.EnumSubset"]], "errorscollector (class in pytconf.errors_collector)": [[2, "pytconf.errors_collector.ErrorsCollector"]], "extendedenum (class in pytconf.extended_enum)": [[2, "pytconf.extended_enum.ExtendedEnum"]], "htmlgen (class in pytconf.utils)": [[2, "pytconf.utils.HtmlGen"]], "json (pytconf.config.configformat attribute)": [[2, "pytconf.config.ConfigFormat.JSON"]], "metaconfig (class in pytconf.config)": [[2, "pytconf.config.MetaConfig"]], "param (class in pytconf.param)": [[2, "pytconf.param.Param"]], "paramchoice (class in pytconf.param)": [[2, "pytconf.param.ParamChoice"]], "paramcollector (class in pytconf.param_collector)": [[2, "pytconf.param_collector.ParamCollector"]], "paramcreator (class in pytconf.param)": [[2, "pytconf.param.ParamCreator"]], "paramenum (class in pytconf.param)": [[2, "pytconf.param.ParamEnum"]], "paramenumsubset (class in pytconf.param)": [[2, "pytconf.param.ParamEnumSubset"]], "paramfilename (class in pytconf.param)": [[2, "pytconf.param.ParamFilename"]], "paramfunctions (class in pytconf.param)": [[2, "pytconf.param.ParamFunctions"]], "pytconfconf (class in pytconf.config)": [[2, "pytconf.config.PytconfConf"]], "registry (class in pytconf.registry)": [[2, "pytconf.registry.Registry"]], "system (pytconf.config.configtype attribute)": [[2, "pytconf.config.ConfigType.SYSTEM"]], "user (pytconf.config.configtype attribute)": [[2, "pytconf.config.ConfigType.USER"]], "unique (class in pytconf.param)": [[2, "pytconf.param.Unique"]], "yaml (pytconf.config.configformat attribute)": [[2, "pytconf.config.ConfigFormat.YAML"]], "add() (pytconf.enum_subset.enumsubset method)": [[2, "pytconf.enum_subset.EnumSubset.add"]], "add_data() (pytconf.param_collector.paramcollector method)": [[2, "pytconf.param_collector.ParamCollector.add_data"]], "add_error() (pytconf.errors_collector.errorscollector method)": [[2, "pytconf.errors_collector.ErrorsCollector.add_error"]], "clear() (pytconf.param_collector.paramcollector method)": [[2, "pytconf.param_collector.ParamCollector.clear"]], "collect() (pytconf.param.param method)": [[2, "pytconf.param.Param.collect"]], "color_hi() (in module pytconf.color_utils)": [[2, "pytconf.color_utils.color_hi"]], "color_ok() (in module pytconf.color_utils)": [[2, "pytconf.color_utils.color_ok"]], "color_warn() (in module pytconf.color_utils)": [[2, "pytconf.color_utils.color_warn"]], "config_arg_parse_and_launch() (in module pytconf.config)": [[2, "pytconf.config.config_arg_parse_and_launch"]], "config_arg_parse_and_launch() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.config_arg_parse_and_launch"]], "convert_bool_to_str() (in module pytconf.convert)": [[2, "pytconf.convert.convert_bool_to_str"]], "convert_int_or_none_to_str() (in module pytconf.convert)": [[2, "pytconf.convert.convert_int_or_none_to_str"]], "convert_int_to_str() (in module pytconf.convert)": [[2, "pytconf.convert.convert_int_to_str"]], "convert_list_int_to_str() (in module pytconf.convert)": [[2, "pytconf.convert.convert_list_int_to_str"]], "convert_list_str_to_str() (in module pytconf.convert)": [[2, "pytconf.convert.convert_list_str_to_str"]], "convert_str_or_none_to_str() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_or_none_to_str"]], "convert_str_to_bool() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_to_bool"]], "convert_str_to_int() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_to_int"]], "convert_str_to_int_default() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_to_int_default"]], "convert_str_to_int_or_none() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_to_int_or_none"]], "convert_str_to_list_int() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_to_list_int"]], "convert_str_to_list_str() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_to_list_str"]], "convert_str_to_str() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_to_str"]], "convert_str_to_str_or_none() (in module pytconf.convert)": [[2, "pytconf.convert.convert_str_to_str_or_none"]], "create_bool() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_bool"]], "create_choice() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_choice"]], "create_enum() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_enum"]], "create_enum_subset() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_enum_subset"]], "create_existing_bucket() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_existing_bucket"]], "create_existing_file() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_existing_file"]], "create_existing_folder() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_existing_folder"]], "create_int() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_int"]], "create_int_or_none() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_int_or_none"]], "create_list_int() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_list_int"]], "create_list_str() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_list_str"]], "create_new_file() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_new_file"]], "create_str() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_str"]], "create_str_or_none() (pytconf.param.paramcreator static method)": [[2, "pytconf.param.ParamCreator.create_str_or_none"]], "delete() (pytconf.enum_subset.enumsubset method)": [[2, "pytconf.enum_subset.EnumSubset.delete"]], "enum_int_to_name() (in module pytconf.extended_enum)": [[2, "pytconf.extended_enum.enum_int_to_name"]], "enum_subset_to_str() (in module pytconf.enum_subset)": [[2, "pytconf.enum_subset.enum_subset_to_str"]], "enum_type_to_list_str() (in module pytconf.extended_enum)": [[2, "pytconf.extended_enum.enum_type_to_list_str"]], "enum_value_to_str() (in module pytconf.extended_enum)": [[2, "pytconf.extended_enum.enum_value_to_str"]], "from_enum_all() (pytconf.enum_subset.enumsubset class method)": [[2, "pytconf.enum_subset.EnumSubset.from_enum_all"]], "from_string() (pytconf.enum_subset.enumsubset class method)": [[2, "pytconf.enum_subset.EnumSubset.from_string"]], "from_string() (pytconf.extended_enum.extendedenum class method)": [[2, "pytconf.extended_enum.ExtendedEnum.from_string"]], "g_from_enum_all() (in module pytconf.enum_subset)": [[2, "pytconf.enum_subset.g_from_enum_all"]], "g_from_string() (in module pytconf.enum_subset)": [[2, "pytconf.enum_subset.g_from_string"]], "get_config() (pytconf.config.pytconfconf static method)": [[2, "pytconf.config.PytconfConf.get_config"]], "get_config_for_name() (pytconf.registry.registry method)": [[2, "pytconf.registry.Registry.get_config_for_name"]], "get_data_for_name() (pytconf.registry.registry method)": [[2, "pytconf.registry.Registry.get_data_for_name"]], "get_do_help() (pytconf.errors_collector.errorscollector method)": [[2, "pytconf.errors_collector.ErrorsCollector.get_do_help"]], "get_first_line() (in module pytconf.pydoc)": [[2, "pytconf.pydoc.get_first_line"]], "get_free_args() (in module pytconf.config)": [[2, "pytconf.config.get_free_args"]], "get_function_selected() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.get_function_selected"]], "get_html() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.get_html"]], "get_html_for_config() (pytconf.config.pytconfconf class method)": [[2, "pytconf.config.PytconfConf.get_html_for_config"]], "get_html_for_function() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.get_html_for_function"]], "get_item() (pytconf.param_collector.paramcollector method)": [[2, "pytconf.param_collector.ParamCollector.get_item"]], "get_list_of_all_values() (pytconf.extended_enum.extendedenum class method)": [[2, "pytconf.extended_enum.ExtendedEnum.get_list_of_all_values"]], "get_logger() (in module pytconf.utils)": [[2, "pytconf.utils.get_logger"]], "get_pytconf() (in module pytconf.config)": [[2, "pytconf.config.get_pytconf"]], "get_show_errors() (pytconf.errors_collector.errorscollector method)": [[2, "pytconf.errors_collector.ErrorsCollector.get_show_errors"]], "get_type_name() (pytconf.param.param method)": [[2, "pytconf.param.Param.get_type_name"]], "get_type_name() (pytconf.param.paramenum method)": [[2, "pytconf.param.ParamEnum.get_type_name"]], "get_type_name() (pytconf.param.paramenumsubset method)": [[2, "pytconf.param.ParamEnumSubset.get_type_name"]], "has_function() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.has_function"]], "has_name() (pytconf.registry.registry method)": [[2, "pytconf.registry.Registry.has_name"]], "has_value() (pytconf.enum_subset.enumsubset method)": [[2, "pytconf.enum_subset.EnumSubset.has_value"]], "have_errors() (pytconf.errors_collector.errorscollector method)": [[2, "pytconf.errors_collector.ErrorsCollector.have_errors"]], "is_help() (in module pytconf.config)": [[2, "pytconf.config.is_help"]], "launch() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.launch"]], "list_of_strings() (pytconf.enum_subset.enumsubset method)": [[2, "pytconf.enum_subset.EnumSubset.list_of_strings"]], "module": [[2, "module-pytconf"], [2, "module-pytconf.color_utils"], [2, "module-pytconf.config"], [2, "module-pytconf.convert"], [2, "module-pytconf.data"], [2, "module-pytconf.enum_subset"], [2, "module-pytconf.errors_collector"], [2, "module-pytconf.extended_enum"], [2, "module-pytconf.param"], [2, "module-pytconf.param_collector"], [2, "module-pytconf.pydoc"], [2, "module-pytconf.registry"], [2, "module-pytconf.static"], [2, "module-pytconf.utils"]], "more_help() (pytconf.param.param method)": [[2, "pytconf.param.Param.more_help"]], "more_help() (pytconf.param.paramchoice method)": [[2, "pytconf.param.ParamChoice.more_help"]], "more_help() (pytconf.param.paramenum method)": [[2, "pytconf.param.ParamEnum.more_help"]], "more_help() (pytconf.param.paramenumsubset method)": [[2, "pytconf.param.ParamEnumSubset.more_help"]], "more_help() (pytconf.param.paramfilename method)": [[2, "pytconf.param.ParamFilename.more_help"]], "noun() (in module pytconf.utils)": [[2, "pytconf.utils.noun"]], "parse_args() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.parse_args"]], "print_error() (in module pytconf.color_utils)": [[2, "pytconf.color_utils.print_error"]], "print_errors() (pytconf.config.pytconfconf class method)": [[2, "pytconf.config.PytconfConf.print_errors"]], "print_highlight() (in module pytconf.color_utils)": [[2, "pytconf.color_utils.print_highlight"]], "print_title() (in module pytconf.color_utils)": [[2, "pytconf.color_utils.print_title"]], "print_warn() (in module pytconf.color_utils)": [[2, "pytconf.color_utils.print_warn"]], "process_flags() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.process_flags"]], "pytconf": [[2, "module-pytconf"]], "pytconf.color_utils": [[2, "module-pytconf.color_utils"]], "pytconf.config": [[2, "module-pytconf.config"]], "pytconf.convert": [[2, "module-pytconf.convert"]], "pytconf.data": [[2, "module-pytconf.data"]], "pytconf.enum_subset": [[2, "module-pytconf.enum_subset"]], "pytconf.errors_collector": [[2, "module-pytconf.errors_collector"]], "pytconf.extended_enum": [[2, "module-pytconf.extended_enum"]], "pytconf.param": [[2, "module-pytconf.param"]], "pytconf.param_collector": [[2, "module-pytconf.param_collector"]], "pytconf.pydoc": [[2, "module-pytconf.pydoc"]], "pytconf.registry": [[2, "module-pytconf.registry"]], "pytconf.static": [[2, "module-pytconf.static"]], "pytconf.utils": [[2, "module-pytconf.utils"]], "read_flags_from_config() (pytconf.config.pytconfconf static method)": [[2, "pytconf.config.PytconfConf.read_flags_from_config"]], "register() (pytconf.registry.registry method)": [[2, "pytconf.registry.Registry.register"]], "register_defaults() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.register_defaults"]], "register_endpoint() (in module pytconf.config)": [[2, "pytconf.config.register_endpoint"]], "register_function() (in module pytconf.config)": [[2, "pytconf.config.register_function"]], "register_function() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.register_function"]], "register_function_group() (in module pytconf.config)": [[2, "pytconf.config.register_function_group"]], "register_function_group() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.register_function_group"]], "register_main() (in module pytconf.config)": [[2, "pytconf.config.register_main"]], "register_main() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.register_main"]], "rm_config_file() (in module pytconf.config)": [[2, "pytconf.config.rm_config_file"]], "s2t() (pytconf.param.param method)": [[2, "pytconf.param.Param.s2t"]], "s2t() (pytconf.param.paramchoice method)": [[2, "pytconf.param.ParamChoice.s2t"]], "s2t() (pytconf.param.paramenum method)": [[2, "pytconf.param.ParamEnum.s2t"]], "s2t() (pytconf.param.paramenumsubset method)": [[2, "pytconf.param.ParamEnumSubset.s2t"]], "s2t() (pytconf.param.paramfilename method)": [[2, "pytconf.param.ParamFilename.s2t"]], "s2t() (pytconf.param.paramfunctions method)": [[2, "pytconf.param.ParamFunctions.s2t"]], "s2t_generate_from_default() (pytconf.param.param method)": [[2, "pytconf.param.Param.s2t_generate_from_default"]], "s2t_generate_from_default() (pytconf.param.paramenumsubset method)": [[2, "pytconf.param.ParamEnumSubset.s2t_generate_from_default"]], "s2t_generate_from_default() (pytconf.param.paramfunctions method)": [[2, "pytconf.param.ParamFunctions.s2t_generate_from_default"]], "set_do_help() (pytconf.errors_collector.errorscollector method)": [[2, "pytconf.errors_collector.ErrorsCollector.set_do_help"]], "set_force_show_errors() (pytconf.errors_collector.errorscollector method)": [[2, "pytconf.errors_collector.ErrorsCollector.set_force_show_errors"]], "show_help() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.show_help"]], "show_help_for_config() (pytconf.config.pytconfconf class method)": [[2, "pytconf.config.PytconfConf.show_help_for_config"]], "show_help_for_function() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.show_help_for_function"]], "str_to_enum_int() (in module pytconf.extended_enum)": [[2, "pytconf.extended_enum.str_to_enum_int"]], "str_to_enum_value() (in module pytconf.extended_enum)": [[2, "pytconf.extended_enum.str_to_enum_value"]], "t2s() (pytconf.param.param method)": [[2, "pytconf.param.Param.t2s"]], "t2s() (pytconf.param.paramchoice method)": [[2, "pytconf.param.ParamChoice.t2s"]], "t2s() (pytconf.param.paramenum method)": [[2, "pytconf.param.ParamEnum.t2s"]], "t2s() (pytconf.param.paramenumsubset method)": [[2, "pytconf.param.ParamEnumSubset.t2s"]], "t2s() (pytconf.param.paramfilename method)": [[2, "pytconf.param.ParamFilename.t2s"]], "t2s() (pytconf.param.paramfunctions method)": [[2, "pytconf.param.ParamFunctions.t2s"]], "to_string() (pytconf.enum_subset.enumsubset method)": [[2, "pytconf.enum_subset.EnumSubset.to_string"]], "unset_show_errors() (pytconf.errors_collector.errorscollector method)": [[2, "pytconf.errors_collector.ErrorsCollector.unset_show_errors"]], "values() (pytconf.enum_subset.enumsubset method)": [[2, "pytconf.enum_subset.EnumSubset.values"]], "write_config() (pytconf.config.pytconfconf method)": [[2, "pytconf.config.PytconfConf.write_config"]], "write_config_file() (in module pytconf.config)": [[2, "pytconf.config.write_config_file"]], "write_config_file() (pytconf.config.pytconfconf class method)": [[2, "pytconf.config.PytconfConf.write_config_file"]], "yield_configs() (pytconf.registry.registry method)": [[2, "pytconf.registry.Registry.yield_configs"]], "yield_errors() (pytconf.errors_collector.errorscollector method)": [[2, "pytconf.errors_collector.ErrorsCollector.yield_errors"]], "yield_items() (pytconf.param_collector.paramcollector method)": [[2, "pytconf.param_collector.ParamCollector.yield_items"]], "yield_name_data_for_config() (pytconf.registry.registry method)": [[2, "pytconf.registry.Registry.yield_name_data_for_config"]], "yield_names_for_config() (pytconf.registry.registry method)": [[2, "pytconf.registry.Registry.yield_names_for_config"]], "yield_values() (pytconf.enum_subset.enumsubset method)": [[2, "pytconf.enum_subset.EnumSubset.yield_values"]]}})